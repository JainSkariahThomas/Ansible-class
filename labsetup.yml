---
  - name: "Anisble Lab setup"
    hosts: local
    connection: local
    become: true
    gather_facts: true
    vars:
      key_pair: flat11fkey
      security_group: ansible-lab
      client_ami: ami-0fc20dd1da406780b
      master_ami: ami-0fc20dd1da406780b
      region: us-east-2
      instance_type: t2.micro
      master_user: ubuntu
      client_user: ubuntu
      debug_enable: true
    tasks:
      - name: "labCreation - Creating Security Group"
        ec2_group:
          name: "{{ security_group }}"
          description: "Security Group For Ansible Lab"
          region: "{{ region }}"
          aws_access_key: "{{ ec2_access_key }}"
          aws_secret_key: "{{ ec2_secret_key }}"
          rules:
            - proto: all
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
      - name: Upload public key to AWS
        ec2_key:
          name: "{{ key_pair }}"
          key_material: "{{ lookup('file', '/root/Ansible/{{ key_pair }}.pub') }}"
          region: "{{ region }}"
          aws_access_key: "{{ ec2_access_key }}"
          aws_secret_key: "{{ ec2_secret_key }}"

      - name: Launch the new EC2 Instance
        ec2:
          aws_access_key: "{{ ec2_access_key }}"
          aws_secret_key: "{{ ec2_secret_key }}"
          group: "{{ security_group }}"
          instance_type: "{{ instance_type }}"
          image: "{{ client_ami }}"
          wait: true
          wait_time: 500
          region: "{{ region }}"
          key_name: "{{ key_pair }}"
          count_tag:
            Name: "ansible/Client"
          instance_tags:
            Name: "ansible/Client"
            role: "ansible-lab"
          exact_count: 1
        register: client_out
      - debug: var=client_out
        when: debug_enable
      - name: "Lab creation for Master"
        ec2:
          instance_type: "{{instance_type}}"
          key_name: "{{key_pair}}"
          image: "{{master_ami}}"
          region: "{{region}}"
          group: "{{security_group}}"
          wait: yes
          wait_time: 500
          count_tag:
            Name: "ansible/Master"
          instance_tags:
            Name: "ansible/Master"
            role: "ansible-lab"
          exact_count: 1
        register: master_out

      - debug: var=master_out
        when: debug_enable
 
      - name: "labCreation - Waiting For Master To Come Online"
        wait_for:
          port: 22
          host: "{{ master_out.tagged_instances.0.public_ip }}"
          timeout: 20
          state: started
          delay: 5

      - name: "labCreation - Adding Master To Inventory"
        add_host:
          hostname: master
      - name: Add the newly created EC2 instance(s) to host group
        lineinfile:
          dest: /etc/ansible/hosts
          regexp: "{{ item.public_ip }}"
          insertafter: "master"
          line: "{{ item.public_ip }}"
          state: present
        with_items: "{{ master_out.tagged_instances }}"


      - name: "labCreation - Installing Ansible on Master"
        become: yes 
        delegate_to: master
        shell: 'amazon-linux-extras install ansible2 -y'

      - name: "labCreation - Creating /home/{{ master_user}}/ansible Directory"
        delegate_to: master
        file:
          path: /home/{{master_user}}/ansible
          state: directory
      
      - name: "labCreation - Uploading Public Key"
        delegate_to: master
        become: true
        copy:
          dest: "/home/{{master_user}}/ansible/{{key_pair}}.pem" 
          src: "/root/Ansible/{{ key_pair }}.pub"

      - name: "labCreation - Creating /home/{{ master_user}}/ansible/inventory.ini"
        delegate_to: master
        copy:
          content: "{{client_out.tagged_instances.0.private_ip}} ansible_user={{client_user}} ansible_ssh_private_key_file={{key_pair}}.pem"
          dest: "/home/{{ master_user}}/ansible/inventory.ini"

      - name: "labCreation - Creating /home/{{ master_user}}/ansible/ansible.cfg"
        delegate_to: master
        template:
          src: /etc/ansible/ansible.cfg
          dest: "/home/{{ master_user}}/ansible/ansible.cfg"


      - name: "labDestroy - Gathering Information About Lab Instances."
        ec2_instance_facts:
          region: "{{ region }}"
          filters:
            instance-state-name: [ "shutting-down", "stopping", "stopped","running"]
            "tag:role": "ansible-lab"
        register: out
        tags: [ 'never', 'delete' ]

      - debug: var=item.instance_id
        when: debug_enable
        with_items:
          - "{{ out.instances }}" 
        tags: [ 'never', 'delete' ]

      - name: "labDestroy - Deleting Lab Instances"
        ec2:
          region: "{{ region }}"
          instance_ids: "{{ item.instance_id }}"
          state: absent
        with_items:
          - "{{ out.instances }}" 
        tags: [ 'never', 'delete' ] 

